 Git- > D Version control tool , SVN --> VCS
 
command line--> 
 DVCS --> Distributed version control system
 
 local: --> Each and every can have their own local copy
 remote:--> central repository remote
 
 
 Capture Picture --> It is available only on your phone (Local)
 Upload to Icloud --> remote repo (Cloud)
 
 Git and github
 
 Git --> local repo (local) --> DVCS
 Github --> central repo (cloud/remote)
 
 Install Git:

1. To check if git is installed: git --version
2. Install git from https://git-scm.com/download/mac
3. Login to Github: https://github.com/
4. Create account --> username, password
5. Create a repository
6. Clone the repo to the local machine
	a. Https -->
	b. SSH --> How to add key?
	
	
Untracked --> Files exist in your working directory(Local) 
Staging area --> You can remove the file
Git commit --> Version will be saved in your local git
 
 
 5 member team -->
 
 QA1 --> loginPage.java --> Github --> master branch (latest code) --> to access the latest code
 QA2, --> HomePage.java --> Github --> master branch
 QA3,  --> Acoounts.java -->
 QA4, QA5
 
 Automate 3 testcases form HomePage?
 Master/Main --> Latest code
 
 1. Create a branch from main branch 
 	git checkout -b "Branch_Name"
 2. update you local branch to remote (Sync)
 	git push --set-upstream origin <Branch_Name" --> First time
 3. Create a pull-request
 4. Review will be done
 5. Code gets merged to main branch
 
 
 Squashing:
 1. Squash commits --> interactive rebasing
 2. git log --oneline
 3. git rebase -i HEAD~3
 4. vim editior
 		I --> edit
 		esc --> :wq! --> enter
 		I --> edit
 		esc --> :wq! --> enter
 5. git push -f
 
 
 Merge conflict:(Resolve)
 1. Two ppl are trying to make changes to the same file
 2. You need to resolve by running
 	git pull --rebase origin main
 3. git add filename
 4. git rebase --continue
 5. git push -f
 
 
 Stash:
 To save your temp changes.
 git stash
 git stash list
 git stash pop stash@{0}
 
 
 
 
 	
 
 
 
 